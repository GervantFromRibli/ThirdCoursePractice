@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model TicketManagement.Web.Models.EventViewModel
@{
    ViewBag.Title = Localizer["Title"];
    Model.FilterLayoutDescriptions.Add(Localizer["All"].Value);
}
<script>
    function changeAddVisibility() {
        document.getElementById('UpdateEvent').style.display = "none";
        document.getElementById('AddEvent').style.display = "block";
    }
    function changeUpdateVisibility(id) {
        document.getElementById('UpdateEvent').style.display = "block";
        document.getElementById('AddEvent').style.display = "none";
        $("#id").val(id);
    }
    function SetSession() {
        sessionStorage.setItem("name", $("#value1").val());
        sessionStorage.setItem("layoutDescr", $("#value2 option:selected").val());
    }
    function GetSession() {
        $("#value1").val(sessionStorage.getItem("name"));
        $("#value2").val(sessionStorage.getItem("layoutDescr"));
    }
</script>

<body onbeforeunload="SetSession()" onload="GetSession()">
    <H1 style="margin-top:15px;">@ViewBag.Title:</H1>
    <form method="get">
        <div>
            <label class="control-label">@Localizer["Name"]:&nbsp;</label>
            <input name="name" id="value1" class="form-control" />
        </div>
        <div>
            <label class="control-label">@Localizer["LayoutDescr"]:&nbsp;</label>
            <select name="layoutDescr" id="value2" class="form-control">
                @foreach (var elem in Model.FilterLayoutDescriptions)
                {
                    <option>@elem</option>
                }
            </select>
        </div>
        <br />
        <div>
            <input type="submit" value="@Localizer["Filter"]" class="btn btn-default" />
        </div>
    </form>
    <br />
    @Localizer[(string)ViewData["Message"]]
    <div>
        <table border="1">
            <thead>
                <tr>
                    <td>
                        <a asp-action="Index" asp-route-type="Id">Id</a>
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-type="name">@Localizer["Name"]</a>
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-type="des">@Localizer["Descr"]</a>
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-type="layoutDes">@Localizer["LayoutDescr"]</a>
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-type="start">@Localizer["Start"]</a>
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-type="end">@Localizer["End"]</a>
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-type="image">@Localizer["Image"]</a>
                    </td>
                </tr>
            </thead>
            @foreach (var elem in Model.Events)
            {
                <tr>
                    <td>
                        <input type="button" class="btn-default" style="border:hidden; width:100%; background-color: rgba(0,100,0,0.9); color:white;" value="@elem.Id" onclick="changeUpdateVisibility(@elem.Id)" />
                    </td>
                    <td>
                        @elem.Name
                    </td>
                    <td>
                        @elem.Description
                    </td>
                    <td>
                        @elem.LayoutDescription
                    </td>
                    <td>
                        @elem.StartDate
                    </td>
                    <td>
                        @elem.EndDate
                    </td>
                    <td>
                        @elem.ImagePath
                    </td>
                </tr>
            }
        </table>
    </div>
    <div>
        @if (Model.PageViewModel.HasPreviousPage)
        {
            <a asp-action="Index"
               asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
               class="btn" style="border:2px solid white;">
                <i class="glyphicon glyphicon-chevron-left"></i>
                @Localizer["Back"]
            </a>
        }
        @if (Model.PageViewModel.HasNextPage)
        {
            <a asp-action="Index"
               asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
               class="btn" style="border:2px solid white;">
                @Localizer["Forward"]
                <i class="glyphicon glyphicon-chevron-right"></i>
            </a>
        }
    </div>
    <br />
    <div>
        <input type="submit" class="btn-default" value="@Localizer["Add"]" onclick="changeAddVisibility()" />
    </div>
    <hr />
    <div>
        <div id="AddEvent" style="display:none;">
            @{await Html.RenderPartialAsync("_AddEvent");}
        </div>
        <div id="UpdateEvent" style="display:none;">
            @{await Html.RenderPartialAsync("_UpdateEvent");}
        </div>
    </div>
</body>